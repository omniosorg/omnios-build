diff -wpruN --no-dereference '--exclude=*.orig' a~/tests/minitcpsrvr.c a/tests/minitcpsrvr.c
--- a~/tests/minitcpsrvr.c	1970-01-01 00:00:00
+++ a/tests/minitcpsrvr.c	1970-01-01 00:00:00
@@ -89,7 +89,11 @@ createListenSocket(void)
 	}
 	// Set SO_REUSEADDR and SO_REUSEPORT options
 	int opt = 1;
-	if (setsockopt(listen_fd, SOL_SOCKET, SO_REUSEADDR | SO_REUSEPORT, &opt, sizeof(opt)) < 0) {
+	int opts = SO_REUSEADDR;
+#ifdef SO_REUSEPORT
+	opts |= SO_REUSEPORT;
+#endif
+	if (setsockopt(listen_fd, SOL_SOCKET, opts, &opt, sizeof(opt)) < 0) {
 		errout("setsockopt failed");
 	}
 
diff -wpruN --no-dereference '--exclude=*.orig' a~/tests/tcpflood.c a/tests/tcpflood.c
--- a~/tests/tcpflood.c	1970-01-01 00:00:00
+++ a/tests/tcpflood.c	1970-01-01 00:00:00
@@ -808,7 +808,8 @@ int sendMessages(struct instdata *inst)
 			}
 			lenSend = sendPlainTCP(socknum, buf, lenBuf, &error_number);
 		} else if(transport == TP_UDP) {
-			lenSend = sendto(udpsockout, buf, lenBuf, 0, &udpRcvr, sizeof(udpRcvr));
+			lenSend = sendto(udpsockout, buf, lenBuf, 0,
+			    (const struct sockaddr *)&udpRcvr, sizeof(udpRcvr));
 			error_number = errno;
 		} else if(transport == TP_TLS) {
 			if(sockArray[socknum] == -1) {
